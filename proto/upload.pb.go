// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: proto/upload.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadStream struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunks        []byte                 `protobuf:"bytes,1,opt,name=chunks,proto3" json:"chunks,omitempty"`
	FileSize      int32                  `protobuf:"varint,2,opt,name=FileSize,proto3" json:"FileSize,omitempty"`
	FilePath      string                 `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadStream) Reset() {
	*x = UploadStream{}
	mi := &file_proto_upload_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadStream) ProtoMessage() {}

func (x *UploadStream) ProtoReflect() protoreflect.Message {
	mi := &file_proto_upload_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadStream.ProtoReflect.Descriptor instead.
func (*UploadStream) Descriptor() ([]byte, []int) {
	return file_proto_upload_proto_rawDescGZIP(), []int{0}
}

func (x *UploadStream) GetChunks() []byte {
	if x != nil {
		return x.Chunks
	}
	return nil
}

func (x *UploadStream) GetFileSize() int32 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *UploadStream) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

type UploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	mi := &file_proto_upload_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_upload_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_proto_upload_proto_rawDescGZIP(), []int{1}
}

func (x *UploadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_upload_proto protoreflect.FileDescriptor

const file_proto_upload_proto_rawDesc = "" +
	"\n" +
	"\x12proto/upload.proto\x12\x0eupload_service\"^\n" +
	"\fUploadStream\x12\x16\n" +
	"\x06chunks\x18\x01 \x01(\fR\x06chunks\x12\x1a\n" +
	"\bFileSize\x18\x02 \x01(\x05R\bFileSize\x12\x1a\n" +
	"\bfilePath\x18\x03 \x01(\tR\bfilePath\"*\n" +
	"\x0eUploadResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2]\n" +
	"\rUploadService\x12L\n" +
	"\n" +
	"UploadFile\x12\x1c.upload_service.UploadStream\x1a\x1e.upload_service.UploadResponse(\x01B\tZ\a./protob\x06proto3"

var (
	file_proto_upload_proto_rawDescOnce sync.Once
	file_proto_upload_proto_rawDescData []byte
)

func file_proto_upload_proto_rawDescGZIP() []byte {
	file_proto_upload_proto_rawDescOnce.Do(func() {
		file_proto_upload_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_upload_proto_rawDesc), len(file_proto_upload_proto_rawDesc)))
	})
	return file_proto_upload_proto_rawDescData
}

var file_proto_upload_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_upload_proto_goTypes = []any{
	(*UploadStream)(nil),   // 0: upload_service.UploadStream
	(*UploadResponse)(nil), // 1: upload_service.UploadResponse
}
var file_proto_upload_proto_depIdxs = []int32{
	0, // 0: upload_service.UploadService.UploadFile:input_type -> upload_service.UploadStream
	1, // 1: upload_service.UploadService.UploadFile:output_type -> upload_service.UploadResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_upload_proto_init() }
func file_proto_upload_proto_init() {
	if File_proto_upload_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_upload_proto_rawDesc), len(file_proto_upload_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_upload_proto_goTypes,
		DependencyIndexes: file_proto_upload_proto_depIdxs,
		MessageInfos:      file_proto_upload_proto_msgTypes,
	}.Build()
	File_proto_upload_proto = out.File
	file_proto_upload_proto_goTypes = nil
	file_proto_upload_proto_depIdxs = nil
}
